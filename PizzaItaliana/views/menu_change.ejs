<h2 class="lg:text-4xl text-3xl font-extrabold dark:text-white text-center mb-8">
    Изменить товар
</h2>

<div id="error"
     class="hidden flex w-full md:max-w-md mx-auto  items-center p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400"
     role="alert">
    <svg class="flex-shrink-0 inline w-4 h-4 mr-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
         fill="currentColor" viewBox="0 0 20 20">
        <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"/>
    </svg>
    <span class="sr-only">Info</span>
    <div id="error_text">

    </div>
</div>
<form id="menu_form" enctype="multipart/form-data" class="md:max-w-md w-full mx-auto">
    <div class="relative z-0 w-full mb-6 group">
        <input type="text" name="item_name" id="item_name"
               class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300
               appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none
               focus:ring-0 focus:border-blue-600 peer"
               placeholder=" " value="<%= product.ITEM_NAME %>" required/>
        <label for="item_name"
               class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300
               transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600
               peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0
               peer-focus:scale-75 peer-focus:-translate-y-6">
            Название товара
        </label>
    </div>
    <div class="relative z-0 w-full mb-6 group">
        <input type="text" name="price" id="price"
               class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300
               appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none
               focus:ring-0 focus:border-blue-600 peer"
               placeholder=" " value="<%= product.SMALL_SIZE_PRICE %>" required/>
        <label for="price"
               class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300
               transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600
               peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0
               peer-focus:scale-75 peer-focus:-translate-y-6">
            Цена
        </label>
    </div>
    <div class="relative z-0 w-full mb-6 group">
        <label for="description" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">
            Описание
        </label>
        <textarea required id="description" name="description" rows="4" class="block p-2.5 w-full text-sm text-gray-900
        bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700
        dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500
        dark:focus:border-blue-500"><%= product.DESCRIPTION %></textarea>
    </div>
    <div class="relative z-0 w-full mb-6 group">
        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
               for="file_input1">Изображение </label>
        <input class="block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400"
               id="file_input1" name="item_image" type="file">
        <p class="mt-1 text-sm text-gray-500 dark:text-gray-300" id="file_input_help">jpg, png файлы</p>
    </div>
    <div class="flex justify-between">
        <button type="submit"
                class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
            Изменить
        </button>
        <a data-modal-target="popup-modal" data-modal-toggle="popup-modal"
           class="focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 dark:focus:ring-red-900">
            Удалить товар
        </a>
    </div>
</form>

<div id="popup-modal" tabindex="-1"
     class="fixed top-0 left-0 right-0 z-50 hidden p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full">
    <div class="relative w-full max-w-md max-h-full">
        <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
            <button type="button"
                    class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white"
                    data-modal-hide="popup-modal">
                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                     viewBox="0 0 14 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                </svg>
                <span class="sr-only">Close modal</span>
            </button>
            <div class="p-6 text-center">
                <svg class="mx-auto mb-4 text-gray-400 w-12 h-12 dark:text-gray-200" aria-hidden="true"
                     xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                          d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
                </svg>
                <h3 class="mb-5 text-lg font-normal text-gray-500 dark:text-gray-400">Вы уверены, что хотите удалить
                    этот товар?</h3>
                <button onclick="sendDelete()" data-modal-hide="popup-modal" type="button"
                        class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none
                        focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex
                        items-center px-5 py-2.5 text-center mr-8">
                    Да, я уверен
                </button>
                <button data-modal-hide="popup-modal" type="button"
                        class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">
                    Отмена
                </button>
            </div>
        </div>
    </div>
</div>

<script>
    let form = document.getElementById('menu_form');
    form.onsubmit = async (event) => {
        event.preventDefault();

        fetch('/menu/change/<%= product.ID %>', {
            method: 'POST',
            body: new FormData(form)
        }).then(async (res) => {
            if (res.status === 200) {
                window.location.href = '/menu';
            } else {
                let error = document.getElementById("error");
                let error_text = document.getElementById("error_text");
                error.classList.remove('hidden');
                let error_message = await res.json();

                error_text.innerHTML = "";
                for (let message of error_message.error) {
                    error_text.innerHTML += `${message.msg}<br/>`;
                }
            }
        })
    };

    const sendDelete = (event) => {
        fetch('/menu/delete/<%= product.ID %>', {
            method: 'POST'
        }).then(async (res) => {
            if (res.status === 200) {
                window.location.href = '/menu';
            } else {
                let error = document.getElementById("error");
                let error_text = document.getElementById("error_text");
                error.classList.remove('hidden');
                let error_message = await res.json();
                error_text.innerHTML =error_message.error;
            }
        })
    }
</script>