<h2 class="lg:text-4xl text-3xl font-extrabold dark:text-white text-center mb-8">
    Корзина
</h2>

<div id="error"
     class="hidden flex w-full md:max-w-md mx-auto  items-center p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400"
     role="alert">
    <svg class="flex-shrink-0 inline w-4 h-4 mr-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
         fill="currentColor" viewBox="0 0 20 20">
        <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"/>
    </svg>
    <span class="sr-only">Info</span>
    <div id="error_text">

    </div>
</div>

<% if (cart_items.length !== 0) { %>
    <div class="w-full flex justify-center md:max-w-6xl mx-auto mt-8">
        <div data-modal-target="popup-modal" data-modal-toggle="popup-modal" class="cursor-pointer text-white w-fit bg-red-700 hover:bg-red-800 focus:ring-4
    focus:ring-red-300 font-medium rounded-lg text-sm
px-5 py-2.5 mr-2 mb-2 dark:bg-red-600 dark:hover:bg-red-700 focus:outline-none dark:focus:ring-red-800">
            Очистить корзину
        </div>
    </div>
    <% cart_items.forEach((item) => { %>
<div class="w-full mx-auto max-w-sm bg-white shadow mb-4 rounded-lg dark:bg-gray-800 dark:border-gray-700">
    <div class="flex justify-end">
        <button onclick="deleteItem(<%= item.ITEM_ID%>)" class="inline-block text-gray-500 w-fit dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:ring-4 focus:outline-none focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-1.5"
           type="button">
            <span class="sr-only">Delete from cart</span>
            <svg class="w-4 h-4 text-gray-800 dark:text-white" aria-hidden="true"
                 xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                      d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
            </svg>
        </button>
    </div>
    <div class="flex flex-col items-center mx-auto md:flex-row md:max-w-md">
            <img class="object-cover h-60 md:h-auto md:w-44 md:rounded-none md:rounded-l-lg"
                 src="<%= item.product.ITEM_IMAGE %>" alt="<%= item.product.ITEM_NAME %>">
            <div class="flex flex-col p-4 leading-normal">
                <h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
                    <%= item.product.ITEM_NAME %>
                </h5>
                <p class="mb-3 text-lg font-normal text-gray-700 dark:text-white">
                    <%= item.ITEM_SIZE %> см
                </p>
                <div class="flex items-center space-x-3">
                    <button onclick="removeOne(<%= item.ITEM_ID %>)"
                            class="inline-flex items-center justify-center p-1 text-sm font-medium h-6 w-6 text-gray-500 bg-white border border-gray-300 rounded-full focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700"
                            type="button">
                        <span class="sr-only">Quantity button</span>
                        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                             viewBox="0 0 18 2">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M1 1h16"/>
                        </svg>
                    </button>
                    <div>
                        <input type="number" id="first_product"
                               class="bg-gray-50 w-14 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block px-2.5 py-1 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                               value="<%= item.ITEM_QUANTITY %>" required>
                    </div>
                    <button onclick="addOne(<%= item.ITEM_ID %>)"
                            class="inline-flex items-center justify-center h-6 w-6 p-1 text-sm font-medium text-gray-500 bg-white border border-gray-300 rounded-full focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 dark:bg-gray-800 dark:text-gray-400 dark:border-gray-600 dark:hover:bg-gray-700 dark:hover:border-gray-600 dark:focus:ring-gray-700"
                            type="button">
                        <span class="sr-only">Quantity button</span>
                        <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none"
                             viewBox="0 0 18 18">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                  d="M9 1v16M1 9h16"/>
                        </svg>
                    </button>
                </div>
                <p id="price<%= item.ID %>" class="price-area mb-3 mt-3 text-xl font-normal dark:text-white">
                    Цена: <%= item.CURRENT_PRICE %> р.
                </p>
            </div>
        </div>
</div>
    <% }); %>
    <h2 class="lg:text-xl text-3xl font-extrabold dark:text-white text-center mb-8">
        Итоговая цена: <%= result_price %>р.
    </h2>

    <div class="w-full flex justify-center md:max-w-6xl mx-auto mt-8">
        <a href="/order/make-order" class="cursor-pointer text-white w-fit bg-blue-700 hover:bg-blue-800 focus:ring-4
    focus:ring-blue-300 font-medium rounded-lg text-sm
px-5 py-2.5 mr-2 mb-2 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800">
            Заказать
        </a>
    </div>
<% } else { %>
    <h2 class="lg:text-xl text-3xl font-extrabold dark:text-white text-center mb-8">
        Корзина пуста
    </h2>
<% } %>

<div id="popup-modal" tabindex="-1" class="fixed top-0 left-0 right-0 z-50 hidden p-4 overflow-x-hidden overflow-y-auto md:inset-0 h-[calc(100%-1rem)] max-h-full">
    <div class="relative w-full max-w-md max-h-full">
        <div class="relative bg-white rounded-lg shadow dark:bg-gray-700">
            <button type="button" class="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 ml-auto inline-flex justify-center items-center dark:hover:bg-gray-600 dark:hover:text-white" data-modal-hide="popup-modal">
                <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6"/>
                </svg>
                <span class="sr-only">Close modal</span>
            </button>
            <div class="p-6 text-center">
                <svg class="mx-auto mb-4 text-gray-400 w-12 h-12 dark:text-gray-200" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z"/>
                </svg>
                <h3 class="mb-5 text-lg font-normal text-gray-500 dark:text-gray-400">Вы уверены, что хотите очистить корзину?</h3>
                <button onclick="purgeCart()" data-modal-hide="popup-modal" type="button" class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300 dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2">
                    Да, я уверен
                </button>
                <button data-modal-hide="popup-modal" type="button" class="text-gray-500 bg-white hover:bg-gray-100 focus:ring-4 focus:outline-none focus:ring-gray-200 rounded-lg border border-gray-200 text-sm font-medium px-5 py-2.5 hover:text-gray-900 focus:z-10 dark:bg-gray-700 dark:text-gray-300 dark:border-gray-500 dark:hover:text-white dark:hover:bg-gray-600 dark:focus:ring-gray-600">
                   Отмена
                </button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    const addOne = (id) => {
        fetch(`/cart/change/${id}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({count: 1})
        }).then(async (res) => {
            if (res.status === 200) {
                window.location.href = '/cart';
            } else {
                let error = document.getElementById("error");
                let error_text = document.getElementById("error_text");
                error.classList.remove('hidden');
                let error_message = await res.json();

                error_text.innerHTML = `${error_message.error}`;
            }
        })
    }

    const removeOne = (id) => {
        fetch(`/cart/change/${id}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({count: -1})
        }).then(async (res) => {
            if (res.status === 200) {
                window.location.href = '/cart';
            } else {
                let error = document.getElementById("error");
                let error_text = document.getElementById("error_text");
                error.classList.remove('hidden');
                let error_message = await res.json();

                error_text.innerHTML = `${error_message.error}`;
            }
        })
    }

    const deleteItem = (id) => {
        fetch(`/cart/delete-item/${id}`, {
            method: 'POST'
        }).then(async (res) => {
            if (res.status === 200) {
                window.location.href = '/cart';
            } else {
                let error = document.getElementById("error");
                let error_text = document.getElementById("error_text");
                error.classList.remove('hidden');
                let error_message = await res.json();

                error_text.innerHTML = `${error_message.error}`;
            }
        })
    }

    const purgeCart = () => {
        fetch(`/cart/purge`, {
            method: 'POST'
        }).then(async (res) => {
            if (res.status === 200) {
                window.location.href = '/cart';
            } else {
                let error = document.getElementById("error");
                let error_text = document.getElementById("error_text");
                error.classList.remove('hidden');
                let error_message = await res.json();

                error_text.innerHTML = `${error_message.error}`;
            }
        })
    }


</script>