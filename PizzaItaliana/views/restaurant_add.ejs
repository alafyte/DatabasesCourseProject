<h2 class="lg:text-4xl text-3xl font-extrabold dark:text-white text-center mb-8">
    Добавить ресторан
</h2>

<div id="error"
     class="hidden flex w-full md:max-w-md mx-auto  items-center p-4 mb-4 text-sm text-red-800 rounded-lg bg-red-50 dark:bg-gray-800 dark:text-red-400"
     role="alert">
    <svg class="flex-shrink-0 inline w-4 h-4 mr-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg"
         fill="currentColor" viewBox="0 0 20 20">
        <path d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"/>
    </svg>
    <span class="sr-only">Info</span>
    <div id="error_text">

    </div>
</div>
<form id="rest_form" enctype="multipart/form-data" class="md:max-w-md w-full mx-auto">
    <div class="relative z-0 w-full mb-6 group">
        <input type="text" name="address" id="address"
               class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
               placeholder=" " required/>
        <label for="address"
               class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">
            Адрес ресторана
        </label>
    </div>
    <div class="relative z-0 w-full mb-6 group">
        <label class="block mb-2 text-sm font-medium text-gray-900 dark:text-white" for="file_input2">Зона
            доставки </label>
        <input required
               class="block w-full text-sm text-gray-900 border border-gray-300 rounded-lg cursor-pointer bg-gray-50 dark:text-gray-400 focus:outline-none dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400"
               id="file_input2" name="coverage_area" type="file">
        <p class="mt-1 text-sm text-gray-500 dark:text-gray-300" id="file_input_help">geojson файлы</p>
    </div>

    <label for="admins" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Администратор</label>
    <select required name="admins" id="admins"
            class="bg-gray-50 mb-8 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500">
        <% admins.map((admin) => { %>
            <option name="<%= admin.ID %>" value="<%= admin.ID %>"><%= admin.FULL_NAME %></option>
        <% }); %>
    </select>
    <div class="grid md:grid-cols-2 md:gap-6">
        <div class="relative z-0 w-full mb-6 group">
            <input type="time" name="open_time" id="open_time"
                   class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                   placeholder=" " required/>
            <label for="open_time"
                   class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">
                Время открытия
            </label>
        </div>
        <div class="relative z-0 w-full mb-6 group">
            <input type="time" name="close_time" id="close_time"
                   class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                   placeholder=" " required/>
            <label for="close_time"
                   class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">
                Время закрытия
            </label>
        </div>
    </div>
    <div class="grid md:grid-cols-2 md:gap-6">
        <div class="relative z-0 w-full mb-6 group">
            <input type="time" name="delivery_start_time" id="delivery_start"
                   class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                   placeholder=" " required/>
            <label for="delivery_start"
                   class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">
                Начало работы доставки
            </label>
        </div>
        <div class="relative z-0 w-full mb-6 group">
            <input type="time" name="delivery_end_time" id="floating_company"
                   class="block py-2.5 px-0 w-full text-sm text-gray-900 bg-transparent border-0 border-b-2 border-gray-300 appearance-none dark:text-white dark:border-gray-600 dark:focus:border-blue-500 focus:outline-none focus:ring-0 focus:border-blue-600 peer"
                   placeholder=" " required/>
            <label for="floating_company"
                   class="peer-focus:font-medium absolute text-sm text-gray-500 dark:text-gray-400 duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:left-0 peer-focus:text-blue-600 peer-focus:dark:text-blue-500 peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">
                Окончание работы доставки
            </label>
        </div>
    </div>
    <button type="submit"
            class="text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm w-full sm:w-auto px-5 py-2.5 text-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">
        Добавить
    </button>
</form>

<script>
    let form = document.getElementById('rest_form');
    form.onsubmit = async (event) => {
        event.preventDefault();
        let error = document.getElementById("error");
        let error_text = document.getElementById("error_text");
        try {

            const formData = new FormData(form);
            let jsonRequestData = {};

            for (let [key, value] of formData) {
                jsonRequestData[key] = value;
            }
            fetch(`https://api.maptiler.com/geocoding/${jsonRequestData.address}%20Минск%20Беларусь%20220.json?key=V2FUSkUjii6I7PIo3elB`)
                .then((response) => response.json())
                .then((data) => {
                    if (data.features[0].place_type[0] === 'region' || data.features[0].place_type[0] === 'postal_code')
                        throw new Error("Invalid address")
                    console.log(data.features[0].center)
                    formData.append("latitude", data.features[0].center[1]);
                    formData.append("longitude", data.features[0].center[0]);

                    fetch('/restaurants/add', {
                        method: 'POST',
                        body: formData
                    }).then(async (res) => {
                        if (res.status === 200) {
                            window.location.href = '/restaurants';
                        } else {
                            error.classList.remove('hidden');
                            let error_message = await res.json();

                            error_text.innerHTML = "";
                            for (let message of error_message.error) {
                                error_text.innerHTML += `${message.msg}<br/>`;
                            }
                        }
                    })
                }).catch(() => {
                error.classList.remove('hidden');
                error_text.innerHTML = `Произошла ошибка! Проверьте введенные данные и повторите попытку`;
            })
        } catch (error) {
            error.classList.remove('hidden');
            error_text.innerHTML = `Произошла ошибка! Проверьте введенные данные и повторите попытку`;
        }
    };
</script>